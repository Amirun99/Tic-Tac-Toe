{"ast":null,"code":"var _jsxFileName = \"/Users/amirun/test_app/src/TicTacToe/TicTacToe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './TicTacToe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TicTacToe = () => {\n  _s();\n\n  const [turn, setTurn] = useState('X');\n  const [cells, setCells] = useState(Array(9).fill(''));\n\n  const handleClick = num => {\n    let squares = [...cells];\n\n    if (turn === 'X') {\n      squares[num] = 'X';\n      setTurn('O');\n    } else {\n      squares[num] = 'O';\n      setTurn('X');\n    }\n\n    setCells(squares);\n    console.log(squares);\n  };\n\n  const Cell = _ref => {\n    let {\n      num\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: () => handleClick(num),\n      children: cells[num]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [\"Turn: \", turn, /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Cell, {\n            num: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Cell, {\n            num: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Cell, {\n            num: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TicTacToe, \"XhcSHioO1JmQ/TWGHdT7sRHOXlU=\");\n\n_c = TicTacToe;\nexport default TicTacToe;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"sources":["/Users/amirun/test_app/src/TicTacToe/TicTacToe.js"],"names":["React","useState","TicTacToe","turn","setTurn","cells","setCells","Array","fill","handleClick","num","squares","console","log","Cell"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,GAAD,CAAhC;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,CAAD,CAAlC;;AAEI,QAAMC,WAAW,GAAIC,GAAD,IAAS;AACzB,QAAIC,OAAO,GAAG,CAAC,GAAGN,KAAJ,CAAd;;AACA,QAAIF,IAAI,KAAK,GAAb,EAAkB;AACdQ,MAAAA,OAAO,CAACD,GAAD,CAAP,GAAe,GAAf;AACAN,MAAAA,OAAO,CAAC,GAAD,CAAP;AACH,KAHD,MAGO;AACHO,MAAAA,OAAO,CAACD,GAAD,CAAP,GAAe,GAAf;AACAN,MAAAA,OAAO,CAAC,GAAD,CAAP;AACH;;AACDE,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,GAXD;;AAaA,QAAMG,IAAI,GAAG,QAAa;AAAA,QAAZ;AAAEJ,MAAAA;AAAF,KAAY;AACtB,wBAAO;AAAI,MAAA,OAAO,EAAE,MAAKD,WAAW,CAACC,GAAD,CAA7B;AAAA,gBAAqCL,KAAK,CAACK,GAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAA,2BACWP,IADX,eAEI;AAAA,gCACI;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAWI;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA9CD;;GAAMD,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport './TicTacToe.css';\n\nconst TicTacToe = () => {\nconst [turn, setTurn] = useState('X');\n\nconst [cells, setCells] = useState(Array(9).fill(''));\n\n    const handleClick = (num) => {\n        let squares = [...cells];\n        if (turn === 'X') {\n            squares[num] = 'X';\n            setTurn('O');\n        } else {\n            squares[num] = 'O';\n            setTurn('X');\n        }\n        setCells(squares);\n        console.log(squares)\n    };\n\n    const Cell = ({ num }) => {\n        return <td onClick={()=> handleClick(num)}>{cells[num]}</td>\n    }\n    return (\n        <div className='container'>\n            <table>\n                Turn: {turn}\n                <tbody>\n                    <tr>\n                        <Cell num={0}/>\n                        <Cell num={1}/>\n                        <Cell num={2}/>\n                    </tr>\n                    <tr>\n                        <Cell num={3}/>\n                        <Cell num={4}/>\n                        <Cell num={5}/>\n                    </tr>\n                    <tr>\n                        <Cell num={6}/>\n                        <Cell num={7}/>\n                        <Cell num={8}/>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>\n    );\n};\n\nexport default TicTacToe;"]},"metadata":{},"sourceType":"module"}